[gd_resource type="ShaderMaterial" load_steps=20 format=2]

[ext_resource path="res://assets/meme_spitshape.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=16]

[sub_resource type="VisualShaderNodeVectorCompose" id=17]

[sub_resource type="VisualShaderNodeScalarUniform" id=22]
uniform_name = "pos"
hint = 1

[sub_resource type="VisualShaderNodeColorUniform" id=5]
uniform_name = "ColorUniform"
default_value_enabled = true
default_value = Color( 0.873254, 0.960938, 0.0975952, 1 )

[sub_resource type="VisualShaderNodeTextureUniform" id=7]
uniform_name = "Shape"

[sub_resource type="VisualShaderNodeTextureUniform" id=8]
uniform_name = "Noise"

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=12]
uniform_name = "AlphaGradient"

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
uniform_name = "ColorGradient"
color_default = 1

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;
uniform float pos : hint_range(0, 1);
uniform sampler2D Noise;
uniform sampler2D ColorGradient : hint_black;
uniform sampler2D Shape;
uniform sampler2D AlphaGradient;



void vertex() {
// Output:0

}

void fragment() {
// Input:8
	vec3 n_out8p0 = vec3(UV, 0.0);

// VectorDecompose:9
	float n_out9p0 = n_out8p0.x;
	float n_out9p1 = n_out8p0.y;
	float n_out9p2 = n_out8p0.z;

// ScalarUniform:12
	float n_out12p0 = pos;

// ScalarOp:10
	float n_out10p0 = n_out9p0 + n_out12p0;

// VectorCompose:11
	float n_in11p2 = 0.00000;
	vec3 n_out11p0 = vec3(n_out10p0, n_out9p1, n_in11p2);

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(Noise, n_out11p0.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// TextureUniform:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 n_tex_read = texture(ColorGradient, n_out4p0.xy);
		n_out7p0 = n_tex_read.rgb;
		n_out7p1 = n_tex_read.a;
	}

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(Shape, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(AlphaGradient, n_out4p0.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// ScalarOp:5
	float n_out5p0 = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333));

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -559.704, 152.471 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 800, 180 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( 20, 100 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 80, 260 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( 40, 440 )
nodes/fragment/5/node = SubResource( 9 )
nodes/fragment/5/position = Vector2( 560, 340 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( 280, 440 )
nodes/fragment/7/node = SubResource( 15 )
nodes/fragment/7/position = Vector2( 300, 240 )
nodes/fragment/8/node = SubResource( 18 )
nodes/fragment/8/position = Vector2( -700, 560 )
nodes/fragment/9/node = SubResource( 19 )
nodes/fragment/9/position = Vector2( -580, 560 )
nodes/fragment/10/node = SubResource( 16 )
nodes/fragment/10/position = Vector2( -320, 440 )
nodes/fragment/11/node = SubResource( 17 )
nodes/fragment/11/position = Vector2( -160, 520 )
nodes/fragment/12/node = SubResource( 22 )
nodes/fragment/12/position = Vector2( -660, 300 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 5, 0, 0, 1, 4, 0, 6, 0, 6, 0, 5, 1, 4, 0, 7, 0, 7, 0, 0, 0, 9, 0, 10, 0, 10, 0, 11, 0, 9, 1, 11, 1, 11, 0, 4, 0, 8, 0, 9, 0, 12, 0, 10, 1 )

[sub_resource type="Gradient" id=13]
offsets = PoolRealArray( 0.303226, 0.529032 )

[sub_resource type="GradientTexture" id=14]
gradient = SubResource( 13 )

[sub_resource type="Gradient" id=20]
offsets = PoolRealArray( 0.283871, 0.548387, 0.670968, 0.754839 )
colors = PoolColorArray( 0, 0, 0, 1, 1, 0, 0, 1, 0.921875, 1, 0, 1, 0.992341, 1, 0.901961, 1 )

[sub_resource type="GradientTexture" id=21]
gradient = SubResource( 20 )

[sub_resource type="OpenSimplexNoise" id=10]
seed = 5

[sub_resource type="NoiseTexture" id=11]
seamless = true
noise = SubResource( 10 )

[resource]
shader = SubResource( 6 )
shader_param/pos = 0.0
shader_param/Noise = SubResource( 11 )
shader_param/ColorGradient = SubResource( 21 )
shader_param/Shape = ExtResource( 1 )
shader_param/AlphaGradient = SubResource( 14 )
